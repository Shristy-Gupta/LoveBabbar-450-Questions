// C++ program to find minimum swaps required
// to club all elements less than or equals
// to k together
#include <iostream>
using namespace std;


int minSwap(int *arr, int n, int k);

// Driver code
int main() {

	int t,n,k;
	cin>>t;
	while(t--)
    {
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++)
            cin>>arr[i];
        cin>>k;
        cout << minSwap(arr, n, k) << "\n";
    }
	return 0;
}
// } Driver Code Ends


int minSwap(int *arr, int n, int k) {
    // Complete the function
    // Sliding window
    // 1) count the number of elements less than or equal to K that will be the window size
    // 2) The minimum number of swap in the current window will be elements greater than k
    // 3) Then traverse through the rest of the window and calculate it
    
    //1)
    int window_size=0;
    for(int i=0;i<n;i++){
        if(arr[i]<=k){
            window_size++;
        }
    }
    //2)
    int min_swap=0, ans=0;
    for(int i=0;i<window_size;i++){
        if(arr[i]>k){
            min_swap++;
        }
    }
    ans=min_swap;
    //3)
    for(int i=window_size;i<n;i++){
        if(arr[i-window_size]>k){
            min_swap--;
        }
        if(arr[i]>k){
            min_swap++;
        }
        ans=min(ans,min_swap);
    }
    return ans;
    
}
