#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends

class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
   vector<int> ans;
   int i=0,k;
   int left=0,right=c-1,top=0,bottom=r-1;
   while(i<r*c){
       k=left;
       while(k<=right){
           ans.push_back(matrix[top][k++]);
           i++;
       }
       top++;
       k=top;
       while(i<r*c && k<=bottom){
           ans.push_back(matrix[k++][right]);
           i++;
       }
       right--;
       k=right;
       while(i<r*c && k>=left){
           ans.push_back(matrix[bottom][k--]);
           i++;
       }
       bottom--;
       k=bottom;
       while(i<r*c && k>=top){
           ans.push_back(matrix[k--][left]);
           i++;
       }
       left++;
   }
   return ans;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
