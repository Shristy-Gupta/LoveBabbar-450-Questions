//https://leetcode.com/problems/search-a-2d-matrix/
class Solution {
public:
    bool binarysearch(vector<vector<int>>& matrix,int rownum,int n, int target){
        //binary search
        int start=0,end=n-1,mid;
        while(start<=end){
            mid=(start+end-1)/2;
            if(matrix[rownum][mid]==target){
                return true;
            }
            else if(matrix[rownum][mid]>target){
                end=mid-1;
                
            }
            else{
               start=mid+1;
            }
        }
            
            return false;
    }
    bool search(vector<vector<int>>& matrix,int m,int n,int target){
        for(int i=0;i<n;i++){
            if(matrix[m][i] == target)
                return true;
        }
        return false;
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int rows=matrix.size();
        int cols=matrix[0].size();
        for(int i=0;i<rows;i++){
            
            
            if(matrix[i][cols-1]==target){
                return true;
            }
            if(matrix[i][cols-1]>target){
                return search(matrix,i,cols,target);
            }
        }
        return false;
    }
};
