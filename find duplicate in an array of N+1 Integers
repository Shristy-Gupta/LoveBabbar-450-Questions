class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int tortoise=nums[0];
        int hare=nums[0];
        while (true){
          tortoise=nums[tortoise];
          hare=nums[nums[hare]];
          if(tortoise==hare){
              break;
          }  
              
        }
        tortoise=nums[0];
        while (tortoise!=hare){
            tortoise=nums[tortoise];
            hare=nums[hare];
        }
        return hare;
    }
    //Another way
    int findDuplicate(vector<int>& nums) {
    if(nums.empty()){
       return 0;
    }
    int slow=nums[0];
    int fast=nums[0];
    do{
      slow=nums[slow];
      fast=nums[nums[fast]];
    }while(slow!=fast);
    fast=nums[0];
    while(fast!=slow){
      slow=nums[slow];
      fast=nums[fast];
    }
    return fast;
    
    }
};
