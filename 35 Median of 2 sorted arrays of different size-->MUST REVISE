
#include <iostream>
#include<bits/stdc++.h>
using namespace std;


int median(int arr[],int n){
    if(n%2==0){
        return (arr[n/2]+arr[n/2-1])/2;
    }
    else{
        return arr[n/2];
    }
}
int getMedian(int arr1[],int arr2[],int n1, int n2){
  int low1=0,high1=n1;
  int cut1,cut2;
  int l1,l2,r1,r2;
  int ans=0;
  while(low1<=high1){
      cut1=low1+(high1-low1)/2;
      cut2=(n1+n2)/2-cut1;
      l1=cut1==0?INT_MIN:arr1[cut1-1];
      l2=cut2==0?INT_MIN:arr2[cut2-1];
      r1=cut1==n1?INT_MAX:arr1[cut1];
      r2=cut2==n2?INT_MAX:arr2[cut2];
      if(l1>r2){
          high1=cut1-1;
      }
      else if(l2>r1){
          low1=cut1+1;
      }
      else{
          if((n1+n2)%2 == 0){
              ans=(max(l1,l2) + min(r1,r2))/2;
              break;
          }
          else{
              
              ans= min(r1,r2);
              break;
          }
      }
      
  }
  return ans;
}
int main() {
    //Median of two sorted arrays of different sizes
    //https://www.geeksforgeeks.org/median-of-two-sorted-arrays/
    
    int ar1[] = {900};
    int ar2[] = {5, 8, 10, 20};
    int n1=1;
    int n2=4;
    //1) Apply gap algorithm and merge them
    //2)return the ith element
    cout<<getMedian(ar2,ar1,n2,n1)<<endl;

    return 0;
}
